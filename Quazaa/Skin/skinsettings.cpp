#include "skinsettings.h"
#include "commonfunctions.h"

#include <QApplication>
#include <QStyle>
#include <QFont>

SkinSettings skinSettings;

SkinSettings::SkinSettings(QObject *parent) :
 QObject(parent)
{
	switch (common::osVersion())
	{
	case OSVersion::Linux:
		setGenericSkin();
		break;
	case OSVersion::BSD:
		setGenericSkin();
		break;
	case OSVersion::Unix:
		setGenericSkin();
		break;
	case OSVersion::MacCheetah:
		break;
	case OSVersion::MacPuma:
		break;
	case OSVersion::MacJaguar:
		break;
	case OSVersion::MacPanther:
		break;
	case OSVersion::MacTiger:
		break;
	case OSVersion::MacLeopard:
		break;
	case OSVersion::MacSnowLeopard:
		break;
	case OSVersion::Win2000:
		setGenericSkin();
		break;
	case OSVersion::WinXP:
		setLunaskin();
		break;
	case OSVersion::Win2003:
		setLunaskin();
		break;
	case OSVersion::WinVista:
		setAeroSkin();
		break;
	case OSVersion::Win7:
		setAeroSkin();
		break;
	}
}

void SkinSettings::setGenericSkin()
{

}

void SkinSettings::setLunaskin()
{
	// Splash Screen
	splashBackground = "QFrame#frameSplashBackground { border-image: url(:/Resource/Luna/splashScreen.png); border: 4px outset darkgrey; border-top: 45px; border-bottom: 43px; padding-bottom: -43px; min-height: 200px; max-height: 200px; min-width: 607px; max-width: 607px; }";
	splashLogo = "background-color: transparent; min-height: 172px; max-height: 172px; min-width: 605px; max-width: 605px; border-image: url(:/Resource/QuazaaLogo.png);";
	splashFooter = "QFrame#frameSplashFooter { background-color: transparent; border: 0px inset darkgrey; min-height: 43; max-height: 43; }";
	splashProgress = "QProgressBar { font-weight: bold; color: black; max-height: 14px; min-height: 14px; max-width: 220px; min-width: 220px; margin-right: 4px; border: 1px inset rgb(104, 104, 104); text-align: center; border-radius: 3px; background-color: white; } QProgressBar::chunk { border-image: url(:/Resource/Luna/progressChunk.png); width: 10px; margin: 0.5px; }";
	splashStatus = "font-weight: bold; color: white; background-color: transparent; padding-left: 5px;";

	// Standard Items
	standardItems = "* { color: black; } QDialog { background-color: rgb(239, 237, 221); } .QWidget { background-color: rgb(239, 237, 221); } QTabWidget::pane { border-image: url(:/Resource/Luna/tabPane.png); border: 1px solid transparent; border-bottom: 3px; border-right: 3px; } QTabWidget::tab-bar {  left: 5px; /* move to the right by 5px */ } /* Style the tab using the tab sub-control. Note that  it reads QTabBar _not_ QTabWidget */ QTabBar::tab { border: 3px solid transparent; border-bottom: none; border-image: url(:/Resource/Luna/tab.png);  padding: 2px; } QTabBar::tab:selected, QTabBar::tab:hover { border-image: url(:/Resource/Luna/tabHoverChecked.png); } QTabBar::tab:disabled { border-image: url(:/Resource/Luna/tabDisabled.png); } QGroupBox { border: 1px solid rgb(208, 208, 191); border-radius: 4px; color: black; margin-top: 6px; padding-top: 6px; } QGroupBox:title { color: rgb(0, 70, 213);  subcontrol-origin: margin;  subcontrol-position: top left; /* position at the top center */  padding: 0 1px; margin-top: -6px; left: 7px } QGroupBox > QLabel { alignment: top center; } QMenu {  border: 1px solid transparent; padding-left: 8px; border-image: url(:/Resource/Luna/menuBackground.png); } QMenu::item {  /* sets background of menu item. set this to something non-transparent   if you want menu color and menu item color to be different */ padding: 1px 25px 1px 20px; color: black; background-color: transparent; } QMenu::item:selected { /* when user selects item using mouse or keyboard */ border: 1px solid rgb(22, 101, 203); color: white; background-color: rgb(22, 101, 203); } QMenu::right-arrow:selected { image: url(:/Resource/Right-Arrow.png); } QMenu:left-arrow:selected { image: url(:/Resource/Left-Arrow.png); } QMenu::icon:checked { /* appearance of a 'checked' icon */  border: 1px inset rgb(0, 70, 213); padding: 1px;  position: absolute; background-color: white; } QMenu::separator {  height: 3px;  border-image: url(:/Resource/Luna/menuSeparator.png); } QSplitter::handle { border: 1px outset rgb(208, 208, 191); background-color: rgb(239, 237, 221); } QSplitter::handle:horizontal { border-top: 0px; border-bottom: 0px;  width: 3px; } QSplitter::handle:vertical { border-left: 0px; border-right: 0px;  height: 3px; } QSplitter::handle:pressed {  background-color: rgb(236, 236, 236); } QStatusBar { border: 4px solid transparent; border-image: url(:/Resource/Luna/statusBar.png); } QStatusBar QLabel {  border: 0px solid transparent; border-left: 2px solid transparent; border-image: url(:/Resource/Luna/statusBarItem.png); } QToolButton { border: 3px solid transparent; border-image: url(:/Resource/Luna/button.png); } QToolButton:hover, QToolButton:checked, QToolButton:default:hover, QToolButton::default:checked { border-image: url(:/Resource/Luna/buttonHover.png); } QToolButton:pressed, QToolButton:default:pressed { border-image: url(:/Resource/Luna/buttonPressed.png); } QToolButton:default { border-image: url(:/Resource/Luna/buttonDefault.png); } QToolButton:disabled { border-image: url(:/Resource/Luna/buttonDisabled.png); } QPushButton { border: 3px solid transparent; border-image: url(:/Resource/Luna/button.png); min-width: 58; padding: 3px; } QPushButton:hover, QPushButton:checked, QPushButton:default:hover, QPushButton::default:checked { border-image: url(:/Resource/Luna/buttonHover.png); } QPushButton:pressed, QPushButton:default:pressed { border-image: url(:/Resource/Luna/buttonPressed.png); } QPushButton:default { border-image: url(:/Resource/Luna/buttonDefault.png); } QPushButton:disabled { border-image: url(:/Resource/Luna/buttonDisabled.png); } QProgressBar { font-weight: bold; color: black; max-height: 14px; min-height: 14px; max-width: 220px; min-width: 220px; margin-right: 4px; border: 1px inset rgb(104, 104, 104); text-align: center; border-radius: 3px; background-color: white; } QProgressBar::chunk { border-image: url(:/Resource/Luna/progressChunk.png); width: 10px; margin: 0.5px; } QRadioButton::indicator {  width: 13px;  height: 13px; } QRadioButton::indicator::unchecked {  image: url(:/Resource/Luna/radioUnchecked.png); } QRadioButton::indicator:unchecked:hover {  image: url(:/Resource/Luna/radioUncheckedHover.png); } QRadioButton::indicator:unchecked:pressed {  image: url(:/Resource/Luna/radioUncheckedPressed.png); } QRadioButton::indicator:unchecked:disabled {  image: url(:/Resource/Luna/radioUncheckedDisabled.png); } QRadioButton::indicator::checked {  image: url(:/Resource/Luna/radioChecked.png); } QRadioButton::indicator:checked:hover {  image: url(:/Resource/Luna/radioCheckedHover.png); } QRadioButton::indicator:checked:pressed {  image: url(:/Resource/Luna/radioCheckedPressed.png); } QRadioButton::indicator:checked:disabled {  image: url(:/Resource/Luna/radioCheckedDisabled.png); } QCheckBox {  spacing: 5px; } QCheckBox::indicator {  width: 13px;  height: 13px; } QCheckBox::indicator:unchecked {  image: url(:/Resource/Luna/checkUnchecked.png); } QCheckBox::indicator:unchecked:hover {  image: url(:/Resource/Luna/checkUncheckedHover.png); } QCheckBox::indicator:unchecked:pressed {  image: url(:/Resource/Luna/checkUncheckedPressed.png); } QCheckBox::indicator:unchecked:disabled {  image: url(:/Resource/Luna/checkUncheckedDisabled.png); } QCheckBox::indicator:checked {  image: url(:/Resource/Luna/checkChecked.png); } QCheckBox::indicator:checked:hover {  image: url(:/Resource/Luna/checkCheckedHover.png); } QCheckBox::indicator:checked:pressed {  image: url(:/Resource/Luna/checkCheckedPressed.png); } QCheckBox::indicator:checked:disabled {  image: url(:/Resource/Luna/checkCheckedDisabled.png); } QLineEdit { border: 1px solid rgb(127, 157, 185);  background: white;  selection-background-color: rgb(22, 101, 203); } /*The password character of line edits that have QLineEdit::Password echo mode can be set using:*/ QLineEdit[echoMode=\"2\"] {  lineedit-password-character: 9679; } /*The background of a read only QLineEdit can be modified as below:*/ QLineEdit:read-only { border-color: rgb(208, 208, 191);  background: rgb(239, 237, 221); } QTextEdit { border: 1px solid rgb(127, 157, 185);  background: white;  selection-background-color: rgb(22, 101, 203); } QTextEdit:read-only { border-color: rgb(208, 208, 191);  background: rgb(239, 237, 221); } QPlainTextEdit { border: 1px solid rgb(127, 157, 185);  background: white;  selection-background-color: rgb(22, 101, 203); } QPlainTextEdit:read-only { border-color: rgb(208, 208, 191);  background: rgb(239, 237, 221); } /*Labels that have the styled frame frame shape set*/ QLabel[frameShape=\"6\"] { border: 1px solid rgb(208, 208, 191); } QScrollBar:horizontal { border-image: url(:/Resource/Luna/scrollHorizontalBackground.png);  border: 1px solid transparent; background-color: transparent;  height: 17px;  margin: 0px 16px -1px 16px; } QScrollBar:horizontal:hover { border-image: url(:/Resource/Luna/scrollHorizontalBackgroundHover.png); } QScrollBar::handle:horizontal { border-image: url(:/Resource/Luna/scrollHorizontalHandle.png); image: url(:/Resource/Luna/scrollHorizontalHandleGlyph.png);  border: 3px solid transparent;  min-width: 20px; } QScrollBar::handle:horizontal:hover { border-image: url(:/Resource/Luna/scrollHorizontalHandleHover.png); image: url(:/Resource/Luna/scrollHorizontalHandleGlyphHover.png); } QScrollBar::handle:horizontal:pressed { border-image: url(:/Resource/Luna/scrollHorizontalHandlePressed.png); image: url(:/Resource/Luna/scrollHorizontalHandleGlyphPressed.png); } QScrollBar::add-line:horizontal { /* add-line is the right arrow button for horizontal scroll bars */ border-image: url(:/Resource/Luna/scrollArrowRight.png); width: 17px; height: 17px;  subcontrol-position: right;  subcontrol-origin: margin; } QScrollBar::add-line:horizontal:hover {  border-image: url(:/Resource/Luna/scrollArrowRightHover.png); } QScrollBar::add-line:horizontal:pressed {  border-image: url(:/Resource/Luna/scrollArrowRightPressed.png); } QScrollBar::add-line:horizontal:disabled {  border-image: url(:/Resource/Luna/scrollArrowRightDisabled.png); } QScrollBar::sub-line:horizontal {/* sub-line is the left arrow button for horizontal scrollbars */ border-image: url(:/Resource/Luna/scrollArrowLeft.png); width: 17px; height: 17px;  subcontrol-position: left;  subcontrol-origin: margin; } QScrollBar::sub-line:horizontal:hover {  border-image: url(:/Resource/Luna/scrollArrowLeftHover.png); } QScrollBar::sub-line:horizontal:pressed {  border-image: url(:/Resource/Luna/scrollArrowLeftPressed.png); } QScrollBar::sub-line:horizontal:disabled {  border-image: url(:/Resource/Luna/scrollArrowLeftDisabled.png); } QScrollBar:left-arrow:horizontal { image: none; } QScrollBar::right-arrow:horizontal { image: none; } QScrollBar:vertical { border-image: url(:/Resource/Luna/scrollVerticalBackground.png); border: 1px solid transparent; background-color: transparent; width: 17px; margin: 16px -1 16px 0px; } QScrollBar:vertical:hover { border-image: url(:/Resource/Luna/scrollVerticalBackgroundHover.png); } QScrollBar::handle:vertical { border-image: url(:/Resource/Luna/scrollVerticalHandle.png); image: url(:/Resource/Luna/scrollVerticalHandleGlyph.png);  border: 3px solid transparent;  min-height: 20px; } QScrollBar::handle:vertical:hover { border-image: url(:/Resource/Luna/scrollVerticalHandleHover.png); image: url(:/Resource/Luna/scrollVerticalHandleGlyphHover.png); } QScrollBar::handle:vertical:pressed { border-image: url(:/Resource/Luna/scrollVerticalHandlePressed.png); image: url(:/Resource/Luna/scrollVerticalHandleGlyphPressed.png); } QScrollBar::add-line:vertical {/* add-line is the down arrow button for vertical scroll bars */ border-image: url(:/Resource/Luna/scrollArrowDown.png); width: 17px; height: 17px;  subcontrol-position: bottom;  subcontrol-origin: margin; } QScrollBar::add-line:vertical:hover { border-image: url(:/Resource/Luna/scrollArrowDownHover.png); } QScrollBar::add-line:vertical:pressed { border-image: url(:/Resource/Luna/scrollArrowDownPressed.png); } QScrollBar::add-line:vertical:disabled { border-image: url(:/Resource/Luna/scrollArrowDownDisabled.png); } QScrollBar::sub-line:vertical {/* sub-line is the up arrow button for horizontal scrollbars */ border-image: url(:/Resource/Luna/scrollArrowUp.png); width: 17px; height: 17px;  subcontrol-position: top;  subcontrol-origin: margin; } QScrollBar::sub-line:vertical:hover { border-image: url(:/Resource/Luna/scrollArrowUpHover.png); } QScrollBar::sub-line:vertical:pressed { border-image: url(:/Resource/Luna/scrollArrowUpPressed.png); } QScrollBar::sub-line:vertical:disabled { border-image: url(:/Resource/Luna/scrollArrowUpDisabled.png); } QScrollBar:up-arrow:vertical { image: none; } QScrollBar::down-arrow:vertical { image: none; } QSpinBox, QDoubleSpinBox {  padding-right: 15px; /* make room for the arrows */ border: 1px solid rgb(127, 157, 185); } QSpinBox::up-button, QDoubleSpinBox::up-button {  subcontrol-origin: border;  subcontrol-position: top right; /* position at the top right corner */  width: 15px; /* 16 + 2*1px border-width = 15px padding + 1px parent border */  border-image: url(:/Resource/Luna/spinUp.png) 1;  border-width: 1px; margin-top: 1px; margin-right: 1px; } QSpinBox::up-button:hover, QDoubleSpinBox::up-button:hover {  border-image: url(:/Resource/Luna/spinUpHover.png) 1; } QSpinBox::up-button:pressed, QDoubleSpinBox::up-button:pressed {  border-image: url(:/Resource/Luna/spinUpPressed.png) 1; } QSpinBox::up-button:off, QDoubleSpinBox::up-button:off {  border-image: url(:/Resource/Luna/spinUpDisabled.png) 1; } QSpinBox::up-arrow, QDoubleSpinBox::up-arrow {  image: url(:/Resource/Luna/spinUpArrow.png); } QSpinBox::up-arrow:disabled, QDoubleSpinBox::up-arrow:disabled, QSpinBox::up-arrow:off, QDoubleSpinBox::up-arrow:off { /* off state when value is max */ image: url(:/Resource/Luna/spinUpArrowDisabled.png); } QSpinBox::down-button, QDoubleSpinBox::down-button {  subcontrol-origin: border;  subcontrol-position: bottom right; /* position at bottom right corner */  width: 15px;  border-image: url(:/Resource/Luna/spinDown.png) 1;  border-width: 1px;  border-top-width: 0; margin-bottom: 1px; margin-right: 1px; } QSpinBox::down-button:hover, QDoubleSpinBox::down-button:hover {  border-image: url(:/Resource/Luna/spinDownHover.png) 1; } QSpinBox::down-button:pressed, QDoubleSpinBox::down-button:pressed {  border-image: url(:/Resource/Luna/spinDownPressed.png) 1; } QSpinBox::down-button:off, QDoubleSpinBox::down-button:off {  border-image: url(:/Resource/Luna/spinDownDisabled.png) 1; } QSpinBox::down-arrow, QDoubleSpinBox::down-arrow {  image: url(:/Resource/Luna/spinDownArrow.png); } QSpinBox::down-arrow:disabled, QDoubleSpinBox::down-arrow:disabled, QSpinBox::down-arrow:off, QDoubleSpinBox::down-arrow:off { /* off state when value in min */  image: url(:/Resource/Luna/spinDownArrowDisabled.png); } QSlider { min-height: 23px; } QSlider::groove:horizontal {  border: 2px solid transparent;  height: 2px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */  position: absolute;  border-image: url(:/Resource/Luna/sliderTrack.png);  margin: 8px 0; } QSlider::handle:horizontal { border: 1px solid transparent; border-image: url(:/Resource/Luna/slider.png);  width: 10px; height: 18px;  margin: -9 0px; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */  position: absolute; } QSlider::handle:horizontal:hover { border-image: url(:/Resource/Luna/sliderHover.png); } QSlider::handle:horizontal:pressed { border-image: url(:/Resource/Luna/sliderPressed.png); } QSlider::handle:horizontal:disabled { border-image: url(:/Resource/Luna/sliderDisabled.png); } QComboBox {  border: 1px solid rgb(127, 157, 185);  padding: 1px 18px 1px 3px;  min-width: 6em;  background: white; } QComboBox:on { /* shift the text when the popup opens */  padding-top: 3px;  padding-left: 4px; } QComboBox::drop-down { /* the combo box button */ border-image: url(:/Resource/Luna/comboButton.png); margin: 1px;  subcontrol-origin: padding;  subcontrol-position: top right;  width: 15px;  border: 2px solid transparent; } /* QComboBox gets the \"on\" state when the popup is open */ QComboBox::drop-down:on, QComboBox::drop-down:pressed { border-image: url(:/Resource/Luna/comboButtonPressed.png); } QComboBox::drop-down:hover { border-image: url(:/Resource/Luna/comboButtonHover.png); } QComboBox::drop-down:disabled { border-image: url(:/Resource/Luna/comboButtonDisabled.png); } QComboBox::down-arrow { image: url(:/Resource/Luna/comboButtonArrow.png); } QComboBox::down-arrow:on { /* shift the arrow when popup is open */  top: 1px;  left: 1px; } QComboBox::down-arrow:disabled { /* shift the arrow when popup is open */ image: url(:/Resource/Luna/comboButtonArrowDisabled.png); } QComboBox QAbstractItemView { border: 1px solid rgb(127, 157, 185); border-image: none; color: black; background-color: white; selection-color: white; selection-background-color: rgb(22, 101, 203); } QComboBox QAbstractItemView::item {  /* sets background of menu item. set this to something non-transparent   if you want menu color and menu item color to be different */ padding: 1px 25px 1px 20px; color: black; background-color: transparent; } QComboBox QAbstractItemView::item:selected { /* when user selects item using mouse or keyboard */ border: 1px solid rgb(22, 101, 203); color: white; background-color: rgb(22, 101, 203); } QComboBox QAbstractItemView::icon:checked { /* appearance of a 'checked' icon */  border: 1px inset rgb(0, 70, 213); padding: 1px;  position: absolute; background-color: white; }";

	// ListViews
	listViews = "QAbstractItemView { border: 1px solid rgb(127, 157, 185); color: black; background-color: white; selection-color: white; selection-background-color: rgb(22, 101, 203); } QHeaderView::section, QHeaderView::section:checked, QHeaderView::section:selected { border-image: url(:/Resource/Luna/itemViewHeader.png); color: black; padding-left: 4px; border: 3px solid transparent; } QHeaderView::section:hover { border-image: url(:/Resource/Luna/itemViewHeaderHoverChecked.png); } /* style the sort indicator */ QHeaderView::down-arrow {  image: url(:/Resource/scrollDownArrow.png); } QHeaderView::up-arrow {  image: url(:/Resource/scrollUpArrow.png); }";

	// Sidebar
	sidebarBackground = "QFrame { background-color: qlineargradient(spread:pad, x1:0.506667, y1:0, x2:0.528889, y2:1, stop:0 rgba(122, 161, 230, 255), stop:1 rgba(99, 117, 214, 255)); } QToolButton { border: 3px solid transparent; background-color: transparent; border-radius: 0px; } QToolButton:hover, QToolButton:checked { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonHoverChecked.png); } QToolButton:pressed { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonPressed.png); } QToolButton:disabled { color: black; border-color: transparent; background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonDisabled.png); }";
	sidebarTaskBackground = "QFrame[frameShape=\"6\"] { border: 1px solid white; background-color: rgb(214, 223, 247); } .QFrame { border: 1px solid white; background-color: rgb(214, 223, 247); } QLabel[frameShape=\"6\"] { border: 1px solid white; background-color: rgb(214, 223, 247); } QLabel { background-color: rgb(214, 223, 247); } QToolButton { border: 3px solid transparent; background-color: transparent; border-radius: 0px; } QToolButton:hover, QToolButton:checked { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonHoverChecked.png); } QToolButton:pressed { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonPressed.png); } QToolButton:disabled { color: black; border-color: transparent; background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonDisabled.png); }";
	sidebarTaskHeader = "QToolButton { border-image: url(:/Resource/Luna/taskHeader.png); border: 1px solid transparent; border-radius: 3px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; color: white; font-size: 16px; font-weight: bold; } QToolButton:!checked { border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; } QToolButton:hover { color: lightgrey; }";
	addSearchButton = "QToolButton { border-image: url(:/Resource/Luna/addSearch.png); border: 1px solid transparent; border-radius: 3px; color: black; font-size: 16px; font-weight: bold; } QToolButton:hover { color: rgb(98, 98, 98); }";

	// Toolbars
	toolbars = "QToolBar { border: 0px solid transparent; background-color: rgb(241, 243, 240); } QToolBar::handle:horizontal { border-image: url(:/Resource/Luna/toolBarGrip.png) repeat; border-bottom: 2px; max-width: 7px; max-height: 7px; } QToolBar::handle:vertical { border-image: url(:/Resource/Luna/toolBarGrip.png) repeat; border-bottom: 2px; border-right: 1px; max-width: 7px; max-height: 7px; } QToolButton { border: 3px solid transparent; background-color: transparent; border-radius: 0px; } QToolButton:hover, QToolButton:checked { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonHoverChecked.png); } QToolButton:pressed { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonPressed.png); } QToolButton:disabled { color: black; border-color: transparent; background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonDisabled.png); } QToolButton[popupMode=\"1\"] { /* only for MenuButtonPopup */  padding-right: 20px; /* make way for the popup button */ } /* the subcontrols below are used only in the MenuButtonPopup mode */ QToolButton::menu-button {  border: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-button:hover {  border: 1px solid transparent; border-left-color: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-arrow:open {  top: 1px; left: 1px; /* shift it a bit */ } ";
	navigationToolbar = "QToolBar { border: 0px solid grey; background-color: rgb(241, 243, 240); } QToolBar::handle:horizontal { border-image: url(:/Resource/Luna/toolBarGrip.png) repeat; border-bottom: 2px; max-width: 7px; max-height: 7px; } QToolBar::handle:vertical { border-image: url(:/Resource/Luna/toolBarGrip.png) repeat; border-bottom: 2px; border-right: 1px; max-width: 7px; max-height: 7px; } QToolButton { border: 3px solid transparent; background-color: transparent; border-radius: 0px; } QToolButton:hover, QToolButton:checked { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonHoverChecked.png); } QToolButton:pressed { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonPressed.png); } /*I was using the text property but that property gets changed during translations. What's This help buttons are someting I do not plan to implement into Quazaa so this is a way to use the property constructively.*/ QToolButton:hover[whatsThis=\"Home\"], QToolButton:checked[whatsThis=\"Home\"] { border: 4px solid transparent; background-color: transparent; border-radius: 0px; border-image: url(:/Resource/Luna/toolBarButtonHome.png); } QToolButton:hover[whatsThis=\"Library\"], QToolButton:checked[whatsThis=\"Library\"] { border: 4px solid transparent; background-color: transparent; border-radius: 0px; border-image: url(:/Resource/Luna/toolBarButtonLibrary.png); } QToolButton:hover[whatsThis=\"Media\"], QToolButton:checked[whatsThis=\"Media\"] { border: 4px solid transparent; background-color: transparent; border-radius: 0px; border-image: url(:/Resource/Luna/toolBarButtonMedia.png); } QToolButton:hover[whatsThis=\"Search\"], QToolButton:checked[whatsThis=\"Search\"] { border: 4px solid transparent; background-color: transparent; border-radius: 0px; border-image: url(:/Resource/Luna/toolBarButtonSearch.png); } QToolButton:hover[whatsThis=\"Transfers\"], QToolButton:checked[whatsThis=\"Transfers\"] { border: 4px solid transparent; background-color: transparent; border-radius: 0px; border-image: url(:/Resource/Luna/toolBarButtonTransfers.png); } QToolButton:hover[whatsThis=\"Security\"], QToolButton:checked[whatsThis=\"Security\"] { border: 4px solid transparent; background-color: transparent; border-radius: 0px; border-image: url(:/Resource/Luna/toolBarButtonSecurity.png); } QToolButton:hover[whatsThis=\"Activity\"], QToolButton:checked[whatsThis=\"Activity\"] { border: 4px solid transparent; background-color: transparent; border-radius: 0px; border-image: url(:/Resource/Luna/toolBarButtonActivity.png); } QToolButton:hover[whatsThis=\"Chat\"], QToolButton:checked[whatsThis=\"Chat\"] { border: 4px solid transparent; background-color: transparent; border-radius: 0px; border-image: url(:/Resource/Luna/toolBarButtonChat.png); }";

	// Headers
	libraryViewHeader = "QFrame { border: 0px solid transparent; background-color: rgb(241, 243, 240); } QToolBar::handle { border-image: url(:/Resource/toolbarGrip.png) repeat; border-bottom: 1px; max-width: 5px; } QToolButton { border: 3px solid transparent; background-color: transparent; border-radius: 0px; } QToolButton:hover, QToolButton:checked { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonHoverChecked.png); } QToolButton:pressed { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonPressed.png); } QToolButton:disabled { color: black; border-color: transparent; background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonDisabled.png); } QToolButton[popupMode=\"1\"] { /* only for MenuButtonPopup */  padding-right: 20px; /* make way for the popup button */ } /* the subcontrols below are used only in the MenuButtonPopup mode */ QToolButton::menu-button {  border: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-button:hover {  border: 1px solid transparent; border-left-color: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-arrow:open {  top: 1px; left: 1px; /* shift it a bit */ } ";
	genericHeader = ".QFrame { background-color: #003399; border-bottom: 5px; padding-left: 2px; } QLabel { font-size: 15px; font-weight: bold; color: white; }";
	homeHeader = ".QFrame { background-color: #003399; border-bottom: 5px; padding-left: 2px; } QLabel { font-size: 15px; font-weight: bold; color: white; }";
	libraryHeader = ".QFrame { background-color: #003399; border-bottom: 5px; padding-left: 2px; } QLabel { font-size: 15px; font-weight: bold; color: white; }";
	mediaHeader = ".QFrame { background-color: #003399; border-bottom: 5px; padding-left: 2px; } QLabel { font-size: 15px; font-weight: bold; color: white; }";
	searchHeader = ".QFrame { background-color: #003399; border-bottom: 5px; padding-left: 2px; } QLabel { font-size: 15px; font-weight: bold; color: white; }";
	transfersHeader = ".QFrame { background-color: #003399; border-bottom: 5px; padding-left: 2px; } QLabel { font-size: 15px; font-weight: bold; color: white; }";
	securityHeader = ".QFrame { background-color: #003399; border-bottom: 5px; padding-left: 2px; } QLabel { font-size: 15px; font-weight: bold; color: white; }";
	activityHeader = ".QFrame { background-color: #003399; border-bottom: 5px; padding-left: 2px; } QLabel { font-size: 15px; font-weight: bold; color: white; }";
	chatHeader = ".QFrame { background-color: #003399; border-bottom: 5px; padding-left: 2px; } QLabel { font-size: 15px; font-weight: bold; color: white; }";
	dialogHeader = ".QFrame { font-size: 15px; font-weight: bold; border-image: url(:/Resource/Luna/genericHeaderBackground.png); border-bottom: 5px; padding-left: 2px; } QLabel { color: white; }";

	// Media
	seekSlider = "QSlider::groove:horizontal {  border: 1px solid rgb(127, 157, 185); border-image: none;  height: 12px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */  background: black; } QSlider::handle:horizontal {  background: rgb(22, 101, 203);  border: 1px solid black; border-image: none;  width: 10px;  margin: 0px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */ }";
	volumeSlider = "QSlider { min-height: 23px; } QSlider::groove:horizontal {  border: 2px solid transparent;  height: 2px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */  position: absolute;  border-image: url(:/Resource/Luna/sliderTrack.png);  margin: 8px 0; } QSlider::handle:horizontal { border: 1px solid transparent; border-image: url(:/Resource/Luna/slider.png);  width: 11px; height: 21px;  margin: -9 0px; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */  position: absolute; } QSlider::handle:horizontal:hover { border-image: url(:/Resource/Luna/sliderHover.png); } QSlider::handle:horizontal:pressed { border-image: url(:/Resource/Luna/sliderPressed.png); } QSlider::handle:horizontal:disabled { border-image: url(:/Resource/Luna/sliderDisabled.png); }";
	mediaToolbar = "QToolBar { border: 0px solid transparent; background-color: rgb(241, 243, 240); } QToolBar::handle:horizontal { border-image: url(:/Resource/Luna/toolBarGrip.png) repeat; border-bottom: 2px; max-width: 7px; max-height: 7px; } QToolBar::handle:vertical { border-image: url(:/Resource/Luna/toolBarGrip.png) repeat; border-bottom: 2px; border-right: 1px; max-width: 7px; max-height: 7px; } QToolButton { border: 3px solid transparent; background-color: transparent; border-radius: 0px; } QToolButton:hover, QToolButton:checked { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonHoverChecked.png); } QToolButton:pressed { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonPressed.png); } QToolButton:disabled { color: black; border-color: transparent; background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonDisabled.png); } QToolButton[popupMode=\"1\"] { /* only for MenuButtonPopup */  padding-right: 20px; /* make way for the popup button */ } /* the subcontrols below are used only in the MenuButtonPopup mode */ QToolButton::menu-button {  border: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-button:hover {  border: 1px solid transparent; border-left-color: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-arrow:open {  top: 1px; left: 1px; /* shift it a bit */ }";

	// Specialised Tab Widgets
	libraryNavigator = "QTabWidget::pane { /* The tab widget frame */  border-top: 2px solid transparent; } QTabWidget::tab-bar {  left: 5px; /* move to the right by 5px */ } /* Style the tab using the tab sub-control. Note that  it reads QTabBar _not_ QTabWidget */ QTabBar::tab { border-image: none;  border: 2px solid transparent;  padding: 2px; color: white; } QTabBar::tab:selected, QTabBar::tab:hover { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonHoverChecked.png); color: black; }";
	tabSearches = "QTabWidget::pane { /* The tab widget frame */  border-top: 2px solid rgb(216, 216, 216); color: rgb(220, 220, 220); } QTabWidget::pane { /* The tab widget frame */  border-top: 2px solid transparent; } QTabWidget::tab-bar {  left: 5px; /* move to the right by 5px */ } /* Style the tab using the tab sub-control. Note that  it reads QTabBar _not_ QTabWidget */ QTabBar::tab { border-image: none;  background: transparent;  border: 2px solid transparent;  padding: 2px; } QTabBar::tab:selected, QTabBar::tab:hover { background-color: transparent; border-image: url(:/Resource/Luna/toolBarButtonHoverChecked.png); } QFrame#frameSearches { background-color: rgb(241, 243, 240); }";

	// Colors
	logColorInformation = "";
	logWeightInformation = "";
	logColorSecurity = QColor(qRgb(170, 170, 0));
	logWeightSecurity = "font-weight:600;";
	logColorNotice = QColor(qRgb(0, 170, 0));
	logWeightNotice = "font-weight:600;";
	logColorDebug = QColor(qRgb(117, 117, 117));
	logWeightDebug = "";
	logColorWarning = QColor(qRgb(255, 0, 0));
	logWeightWarning = "";
	logColorError = QColor(qRgb(170, 0, 0));
	logWeightError = "font-weight:600;";
	logColorCritical = QColor(qRgb(255, 0, 0));
	logWeightCritical = "font-weight:600;";
	listsColorNormal = QColor(0, 0, 0);
	listsWeightNormal = qApp->font().weight();
	listsColorActive = QColor(0, 0, 180);
	listsWeightActive = qApp->font().weight();
	listsColorSpecial = QColor(0, 0, 180);
	listsWeightSpecial = qApp->font().weight();
	listsColorHighlighted = QColor(0, 0, 180);
	listsWeightHighlighted = qApp->font().weight();
}

void SkinSettings::setAeroSkin()
{
	// Splash Screen
	splashBackground = "QFrame#frameSplashBackground { border-image: url(:/Resource/Aero/splashBackground.png); border: 4px; border-top: 34px; border-bottom: 36px; padding-bottom: -29px; }";
	splashLogo = "background-color: transparent; min-height: 165px; max-height: 165px; min-width: 652px; max-width: 652px; border-image: url(:/Resource/QuazaaLogo.png);";
	splashFooter = "QFrame { border-image: url(:/Resource/HeaderBackground.png) repeat; min-height: 28; max-height: 28; }";
	splashProgress = "QProgressBar { font-weight: 100; color: white; border: 2px solid transparent; padding: -1px; text-align: right; subcontrol-origin: margin; margin-right: 30px; background-color: transparent; max-height: 15px; min-height: 15px; max-width: 300px; min-width: 300px; } QProgressBar:horizontal { border-image: url(:/Resource/Aero/progressBarBackground.png); } QProgressBar::chunk:horizontal { border-image: url(:/Resource/Aero/prograssBar.png); }";
	splashStatus = "font-weight: 100; color: white; background-color: transparent; padding-left: 5px;";

	// Standard Items
	standardItems = "";

	// ListViews
	listViews = "QAbstractItemView { border: 1px solid rgb(217, 212, 218); color: black; background-color: white; selection-color: black; selection-background-color: white; } QAbstractItemView::item:selected { /* when user selects item using mouse or keyboard */ border: 3px solid transparent; border-image: url(:/Resource/Aero/itemHoverSelected.png); } QHeaderView::section, QHeaderView::section:checked, QHeaderView::section:selected { border-image: url(:/Resource/Aero/headerSection.png); color: black; padding-left: 4px; border: 3px solid transparent; } QHeaderView::section:hover { border-image: url(:/Resource/Aero/headerSectionHover.png); } QHeaderView::section:pressed { border-image: url(:/Resource/Aero/headerSectionPressed.png); } /* style the sort indicator */ QHeaderView::down-arrow {  image: url(:/Resource/scrollDownArrow.png); } QHeaderView::up-arrow {  image: url(:/Resource/scrollUpArrow.png); }";

	// Sidebar
	sidebarBackground = ".QFrame { border-image: url(:/Resource/Aero/sidebarBackground.png); }";
	sidebarTaskBackground = "QFrame { border-image: none; border: 0px solid transparent; background-color: transparent; color: white; }";
	sidebarTaskHeader = "QToolButton { border-image: none; image: url(:/Resource/Aero/taskArrowUnchecked.png); image-position: right; border: 0px solid transparent; background-color: transparent; font-weight: 100; color: white; } QToolButton:hover { color: lightgrey; } QToolButton:checked { image: url(:/Resource/Aero/taskArrowChecked.png); font-weight: bold; }";
	addSearchButton = "QToolButton { border-image: none; border: 0px solid transparent; background-color: transparent; background: transparent; color: white; font-weight: bold; } QToolButton:hover { color: lightgrey; }";

	// Toolbars
	toolbars = "QToolBar { border-image: url(:/Resource/Aero/toolbar.png); border: 2px; border-bottom: 3px; } QToolBar::handle:horizontal { border-image: url(:/Resource/Aero/toolbarGrip.png); border-left: 3px; border-right: 3px; width: 2px; } QToolBar::handle:vertical { border-image: url(:/Resource/Aero/toolBarGripVertical.png); border-top: 3px; border-bottom: 3px; height: 2px; } QToolButton { border: 3px solid transparent; border-image: none; background-color: transparent; border-radius: 0px; } QToolButton:hover, QToolButton:checked { background-color: transparent; border-image: url(:/Resource/Aero/toolButtonHoverChecked.png); } QToolButton:pressed { background-color: transparent; border-image: url(:/Resource/Aero/toolButtonPressed.png); } QToolButton:disabled { color: black; border-color: transparent; background-color: transparent; border-image: url(:/Resource/Aero/toolButtonDisabled.png); } QToolButton[popupMode=\"1\"] { /* only for MenuButtonPopup */  padding-right: 20px; /* make way for the popup button */ } /* the subcontrols below are used only in the MenuButtonPopup mode */ QToolButton::menu-button {  border: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-button:hover {  border: 1px solid transparent; border-left-color: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-arrow:open {  top: 1px; left: 1px; /* shift it a bit */ } ";
	navigationToolbar = "QToolBar { border-image: url(:/Resource/Aero/transparentToolbar.png); border: 1px; } QToolBar:!active { border-image: url(:/Resource/Aero/transparentToolbarInactive.png); } QToolBar::handle:horizontal { border-image: url(:/Resource/Aero/toolbarGrip.png); border-left: 3px; border-right: 3px; width: 2px; } QToolBar::handle:vertical { border-image: url(:/Resource/Aero/toolBarGripVertical.png); border-top: 3px; border-bottom: 3px; height: 2px; } QToolButton { border: 3px solid transparent; border-image: none; background-color: transparent; border-radius: 0px; } QToolButton:hover, QToolButton:checked { background-color: transparent; border-image: url(:/Resource/Aero/toolButtonHoverChecked.png); } QToolButton:pressed { background-color: transparent; border-image: url(:/Resource/Aero/toolButtonPressed.png); } QToolButton:disabled { color: black; border-color: transparent; background-color: transparent; border-image: url(:/Resource/Aero/toolButtonDisabled.png); } QToolButton[popupMode=\"1\"] { /* only for MenuButtonPopup */  padding-right: 20px; /* make way for the popup button */ } /* the subcontrols below are used only in the MenuButtonPopup mode */ QToolButton::menu-button {  border: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-button:hover {  border: 1px solid transparent; border-left-color: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-arrow:open {  top: 1px; left: 1px; /* shift it a bit */ } ";

	// Headers
	libraryViewHeader = ".QFrame { border-image: url(:/Resource/Aero/toolbar.png); border: 2px; border-bottom: 3px; } QLabel { color: black; font-size: 15px; font-weight: 100; } QToolButton { border: 3px solid transparent; background-color: transparent; border-radius: 0px; } QToolButton:hover, QToolButton:checked { background-color: transparent; border-image: url(:/Resource/Aero/toolButtonHoverChecked.png); } QToolButton:pressed { background-color: transparent; border-image: url(:/Resource/Aero/toolButtonPressed.png); } QToolButton:disabled { color: black; border-color: transparent; background-color: transparent; border-image: url(:/Resource/Aero/toolButtonDisabled.png); } QToolButton[popupMode=\"1\"] { /* only for MenuButtonPopup */  padding-right: 20px; /* make way for the popup button */ } /* the subcontrols below are used only in the MenuButtonPopup mode */ QToolButton::menu-button {  border: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-button:hover {  border: 1px solid transparent; border-left-color: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-arrow:open {  top: 1px; left: 1px; /* shift it a bit */ }";
	genericHeader = ".QFrame { border-image: url(:/Resource/Aero/header.png) stretch; border: 2px solid transparent; } QLabel { color: white; font-size: 15px; font-weight: bold; }";
	homeHeader = ".QFrame { border-image: url(:/Resource/Aero/header.png) stretch; border: 2px solid transparent; } QLabel { color: white; font-size: 15px; font-weight: bold; }";
	libraryHeader = ".QFrame { border-image: url(:/Resource/Aero/header.png) stretch; border: 2px solid transparent; } QLabel { color: white; font-size: 15px; font-weight: bold; }";
	mediaHeader = ".QFrame { border-image: url(:/Resource/Aero/header.png) stretch; border: 2px solid transparent; } QLabel { color: white; font-size: 15px; font-weight: bold; }";
	searchHeader = ".QFrame { border-image: url(:/Resource/Aero/header.png) stretch; border: 2px solid transparent; } QLabel { color: white; font-size: 15px; font-weight: bold; }";
	transfersHeader = ".QFrame { border-image: url(:/Resource/Aero/header.png) stretch; border: 2px solid transparent; } QLabel { color: white; font-size: 15px; font-weight: bold; }";
	securityHeader = ".QFrame { border-image: url(:/Resource/Aero/header.png) stretch; border: 2px solid transparent; } QLabel { color: white; font-size: 15px; font-weight: bold; }";
	activityHeader = "font-size: 15px; font-weight: bold; color: rgb(255, 255, 255); background-image: url(:/Resource/HeaderBackground.png);";
	chatHeader = ".QFrame { border-image: url(:/Resource/Aero/header.png) stretch; border: 2px solid transparent; } QLabel { color: white; font-size: 15px; font-weight: bold; }";
	dialogHeader = ".QFrame { border-image: url(:/Resource/Aero/dialogHeader.png) stretch; border: 2px solid transparent; } QLabel { color: white; font-size: 15px; font-weight: bold; }";

	// Media
	seekSlider = "QSlider::groove:horizontal { border: 1px solid rgb(82, 111, 174); border-image: none; height: 22px; background: black; margin: 3px 0; } QSlider::handle:horizontal { background: qlineargradient(spread:pad, x1:0.510526, y1:0, x2:0.511, y2:1, stop:0 rgba(206, 215, 255, 255), stop:0.184211 rgba(82, 107, 192, 255), stop:0.342105 rgba(55, 80, 167, 255), stop:0.484211 rgba(17, 26, 148, 255), stop:0.636842 rgba(0, 0, 0, 255), stop:0.8 rgba(24, 46, 171, 255), stop:0.984211 rgba(142, 142, 255, 255)); border: 1px solid rgb(82, 111, 174); border-image: none; border-radius: 0px; width: 4px; margin: 1px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */ }";
	volumeSlider = "QSlider::groove:horizontal { border: 1px solid rgb(0, 61, 89); border-image: none; height: 3px; background: black; margin: 2px 0; } QSlider::handle:horizontal { background: qlineargradient(spread:pad, x1:0.510526, y1:0, x2:0.511, y2:1, stop:0 rgba(206, 215, 255, 255), stop:0.184211 rgba(82, 107, 192, 255), stop:0.342105 rgba(55, 80, 167, 255), stop:0.484211 rgba(17, 26, 148, 255), stop:0.636842 rgba(0, 0, 0, 255), stop:0.8 rgba(24, 46, 171, 255), stop:0.984211 rgba(142, 142, 255, 255)); border: 1px solid rgb(82, 111, 174); border-image: none; width: 6px; margin: -4px 0; } ";
	mediaToolbar = "QToolBar { border-image: url(:/Resource/Aero/toolbar.png); border: 2px; border-bottom: 3px; } QToolBar::handle:horizontal { border-image: url(:/Resource/Aero/toolbarGrip.png); border-left: 3px; border-right: 3px; width: 2px; } QToolBar::handle:vertical { border-image: url(:/Resource/Aero/toolBarGripVertical.png); border-top: 3px; border-bottom: 3px; height: 2px; } QToolButton { border: 3px solid transparent; border-image: none; background-color: transparent; border-radius: 0px; } QToolButton:hover, QToolButton:checked { background-color: transparent; border-image: url(:/Resource/Aero/toolButtonHoverChecked.png); } QToolButton:pressed { background-color: transparent; border-image: url(:/Resource/Aero/toolButtonPressed.png); } QToolButton:disabled { color: black; border-color: transparent; background-color: transparent; border-image: url(:/Resource/Aero/toolButtonDisabled.png); } QToolButton[popupMode=\"1\"] { /* only for MenuButtonPopup */  padding-right: 20px; /* make way for the popup button */ } /* the subcontrols below are used only in the MenuButtonPopup mode */ QToolButton::menu-button {  border: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-button:hover {  border: 1px solid transparent; border-left-color: 1px solid transparent;  /* 16px width + 4px for border = 20px allocated above */  width: 16px; } QToolButton::menu-arrow:open {  top: 1px; left: 1px; /* shift it a bit */ }";

	// Specialised Tab Widgets
	libraryNavigator = "QTabWidget::pane { /* The tab widget frame */  border-top: 2px solid transparent; } QTabWidget::tab-bar {  left: 5px; /* move to the right by 5px */ } QTabWidget::tab-bar {  left: 5px; /* move to the right by 5px */ } /* Style the tab using the tab sub-control. Note that  it reads QTabBar _not_ QTabWidget */ QTabBar::tab { border-image: none;  border: 2px solid transparent;  padding: 2px; color: white; } QTabBar::tab:selected, QTabBar::tab:hover { background-color: transparent; border-image: url(:/Resource/Aero/toolButtonHoverChecked.png); color: black; }";
	tabSearches = "QTabWidget::pane { /* The tab widget frame */  border-top: 2px solid rgb(216, 216, 216); color: rgb(220, 220, 220); } QTabWidget::tab-bar {  left: 5px; /* move to the right by 5px */ } /* Style the tab using the tab sub-control. Note that  it reads QTabBar _not_ QTabWidget */ QTabBar::tab { border-image: none;  background: transparent;  border: 2px solid transparent;  padding: 2px; } QTabBar::tab:selected, QTabBar::tab:hover { background-color: transparent; border-image: url(:/Resource/Aero/toolButtonHoverChecked.png); } QFrame#frameSearches { background-color: rgb(241, 243, 240); }";

	// Colors
	logColorInformation = "";
	logWeightInformation = "";
	logColorSecurity = QColor(qRgb(170, 170, 0));
	logWeightSecurity = "font-weight:600;";
	logColorNotice = QColor(qRgb(0, 170, 0));
	logWeightNotice = "font-weight:600;";
	logColorDebug = QColor(qRgb(117, 117, 117));
	logWeightDebug = "";
	logColorWarning = QColor(qRgb(255, 0, 0));
	logWeightWarning = "";
	logColorError = QColor(qRgb(170, 0, 0));
	logWeightError = "font-weight:600;";
	logColorCritical = QColor(qRgb(255, 0, 0));
	logWeightCritical = "font-weight:600;";
	listsColorNormal = QColor(0, 0, 0);
	listsWeightNormal = qApp->font().weight();
	listsColorActive = QColor(0, 0, 180);
	listsWeightActive = qApp->font().weight();
	listsColorSpecial = QColor(0, 0, 180);
	listsWeightSpecial = qApp->font().weight();
	listsColorHighlighted = QColor(0, 0, 180);
	listsWeightHighlighted = qApp->font().weight();
}
